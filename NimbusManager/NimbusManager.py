#! /usr/bin/env python
# -*- coding: iso-8859-1 -*-
VERSION = "1.2"

from SOAPpy import SOAPServer
import sys,os
import ConfigParser


try:
	t = open('/etc/nimbus/nimbus_manager.conf')
	t.close()
except: 
	print "File /etc/nimbus/nimbus_manager.conf not found !"
	sys.exit(1)

config = ConfigParser.ConfigParser()
config.read("/etc/nimbus/nimbus_manager.conf")

IP = config.get("NETWORK","address")
PORT = config.get("NETWORK","port")

iftabpath = config.get("PATH","iftab")
interfacespath = config.get("PATH","interfaces")
dnspath = config.get("PATH","dns")

def generate_iftab(ifacename, macadd):
	if os.path.isfile(iftabpath):
		os.rename(iftabpath,iftabpath+".old")
		print "Backup iftab file. A .old file created"
	iftab = open(iftabpath,"w")
	iftab.write("# Control file for ifrename tool\n")
	iftab.write("# Needed for renaming interfaces\n")
	iftab.write("# Generated by Nimbus\n")
	iftab.write("%s\t\t%s %s\n" % (ifacename, 'mac', macadd))
	iftab.close()
	print "Iftab file created"

def generate_dns(ns1,ns2=None,ns3=None):
	if os.path.isfile(dnspath):
		os.rename(dnspath,dnspath+".old")
		print "Backuping dns file. A .old file created"
	dns = open(dnspath,"w")
	dns.write("# DNS config\n")
	dns.write("# Generated by Nimbus\n")
	dns.write("nameserver %s\n" % ns1)
	if ns2:
		dns.write("nameserver %s\n" % ns2)
	if ns3:
		dns.write("nameserver %s\n" % ns3)
	dns.close()
	print "DNS file created"

def generate_interfaces(iface, ip, netmask, broad=None, network=None, gateway=None):
	if os.path.isfile(interfacespath):
		os.rename(interfacespath,interfacespath+".old")	
		print "Backuping interfaces file. A .old file created"
	interfaces = open(iterfacespath,"w")
	interfaces.write("# Interfaces config\n")
	interfaces.write("# Generated by Nimbus\n")
	interfaces.write("auto lo\n")
	interfaces.write("iface lo inet loopback\n")
	interfaces.write("auto %s\n" % iface)
	interfaces.write("iface %s inet static\n" % iface)
	interfaces.write("\taddress %s\n" % ip)
	interfaces.write("\tnetmask %s\n" % netmask)
	if broad:
		interfaces.write("\tbroadcast %s\n" % broad)
	if network:
		interfaces.write("\tnetwork %s\n" % network)
	if gateway:
		interfaces.write("\tgateway %s\n" % gateway)
	interfaces.close()
	print "Interfaces file created"

def main():

	server = SOAPServer((IP,int(PORT)))
	server.registerFunction(generate_iftab)
	server.registerFunction(generate_dns)
	server.registerFunction(generate_interfaces)
	print "Inicializing NimbusManager version %s by Linconet" % VERSION
	server.serve_forever()

if __name__ == "__main__":
    main()
